{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumb\\\\OneDrive\\\\Desktop\\\\BCT-Task\\\\frontend\\\\src\\\\components\\\\signup\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = props => {\n  _s();\n\n  const [temp, setTemp] = useState({\n    Name: \"\",\n    Email: \"\",\n    Password: \"\"\n  });\n  const [error, setError] = useState({\n    NameErr: {},\n    EmailErr: {},\n    PasswordErr: {}\n  });\n\n  const add = () => {\n    debugger;\n    let isValid = FormValidation();\n\n    if (isValid === true) {\n      const register = {\n        name: temp.Name,\n        email: temp.Email,\n        password: temp.Password\n      };\n      axios.post(\"http://localhost:4000/app/signup\", register).then(response => {\n        console.log(response.data);\n\n        if (response.data.message === \"User Added Successfully!\") {\n          alert(\"User Added Successfully!\");\n        } else {\n          alert(\"Invalid Name, Email ID or Password!\");\n        }\n      });\n    }\n  };\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setTemp(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const FormValidation = () => {\n    const NameErr = {};\n    const EmailErr = {};\n    const PasswordErr = {};\n    let isValid = true;\n\n    if (temp.Name.length < 1) {\n      NameErr.nameSort = \"!Enter Name\";\n      isValid = false;\n    }\n\n    if (temp.Email.length < 1) {\n      EmailErr.EmailSort = \"!Enter Email\";\n      isValid = false;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(temp.Email)) {\n      EmailErr.EmailSort = \"Enter a valid Email\";\n      isValid = false;\n    }\n\n    if (temp.Password.length < 1) {\n      PasswordErr.PasswordSort = \"!Enter Password\";\n      isValid = false;\n    } else if (temp.Password.length < 6) {\n      PasswordErr.PasswordSort = \"Enter minimum 6 characters\";\n      isValid = false;\n    }\n\n    setError({\n      NameErr: NameErr,\n      EmailErr: EmailErr,\n      PasswordErr: PasswordErr\n    });\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signupContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nameContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"nameLabel\",\n        for: \"Name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), Object.keys(error.NameErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nameErr\",\n          children: error.NameErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"nameInput\",\n        type: \"text\",\n        name: \"Name\",\n        id: \"Name\",\n        onChange: handleChange,\n        value: temp.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"emailLabel\",\n        for: \"Email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), Object.keys(error.EmailErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emailErr\",\n          children: error.EmailErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"emailInput\",\n        type: \"email\",\n        name: \"Email\",\n        id: \"Email\",\n        onChange: handleChange,\n        value: temp.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"passLabel\",\n        for: \"Password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), Object.keys(error.PasswordErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"passErr\",\n          children: error.PasswordErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"passInput\",\n        type: \"password\",\n        name: \"Password\",\n        id: \"Password\",\n        onChange: handleChange,\n        value: temp.Password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupBtnContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signupBtn\",\n        onClick: add,\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"navLogin\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"x8+dAS/5D2T1tV7hODE2ElgVi0I=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/chumb/OneDrive/Desktop/BCT-Task/frontend/src/components/signup/Signup.js"],"names":["React","useState","Link","axios","Signup","props","temp","setTemp","Name","Email","Password","error","setError","NameErr","EmailErr","PasswordErr","add","isValid","FormValidation","register","name","email","password","post","then","response","console","log","data","message","alert","handleChange","e","value","target","prev","length","nameSort","EmailSort","test","PasswordSort","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './signup.css';\r\n\r\nconst Signup = (props)=> {\r\n\r\n    const [temp,setTemp]=useState({\r\n                    Name:\"\",\r\n                    Email:\"\",\r\n                    Password:\"\"\r\n\r\n    });\r\n    const [error,setError]=useState({\r\n                    NameErr:{},\r\n                    EmailErr:{},\r\n                    PasswordErr:{},\r\n    });\r\n    const add = () =>{\r\n        debugger;\r\n        let isValid = FormValidation();\r\n        if(isValid === true){\r\n            const register = {\r\n            name: temp.Name,\r\n            email: temp.Email,\r\n            password: temp.Password\r\n        }\r\n            axios.post(\"http://localhost:4000/app/signup\", register)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if(response.data.message === \"User Added Successfully!\"){\r\n                    alert(\"User Added Successfully!\")\r\n                }\r\n                else{\r\n                    alert(\"Invalid Name, Email ID or Password!\")\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleChange =(e)=>{\r\n        \r\n        let {name, value}=e.target;\r\n        setTemp((prev)=>({\r\n            ...prev,\r\n            [name]:value\r\n        }))\r\n    }\r\n    const FormValidation = () =>{\r\n\r\n            const NameErr={};\r\n            const EmailErr={};\r\n            const PasswordErr={};\r\n\r\n            let isValid= true;\r\n\r\n        if(temp.Name.length < 1 ){\r\n            NameErr.nameSort=\"!Enter Name\";\r\n            isValid =false;\r\n        } \r\n        if(temp.Email.length < 1){\r\n            EmailErr.EmailSort=\"!Enter Email\";\r\n            isValid =false;\r\n        }\r\n        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(temp.Email)){\r\n            EmailErr.EmailSort=\"Enter a valid Email\";\r\n            isValid =false;\r\n        }\r\n        if(temp.Password.length < 1 ){\r\n            PasswordErr.PasswordSort=\"!Enter Password\";\r\n            isValid =false;\r\n        }\r\n        else if(temp.Password.length < 6 ){\r\n            PasswordErr.PasswordSort=\"Enter minimum 6 characters\";\r\n            isValid =false;\r\n        }\r\n        setError({\r\n            NameErr:NameErr,\r\n            EmailErr:EmailErr,\r\n            PasswordErr:PasswordErr,\r\n        })\r\n        return isValid;\r\n    }\r\n\r\nreturn (\r\n    <div className=\"signupContainer\">\r\n        <div className=\"nameContainer\">\r\n            <label className=\"nameLabel\" for=\"Name\">Name</label>\r\n                {Object.keys(error.NameErr).map((key) => {\r\n                    return (\r\n                    <span className=\"nameErr\">{error.NameErr[key]}</span>\r\n                    );\r\n                })} \r\n                <br/>\r\n            <input className=\"nameInput\" type=\"text\" name=\"Name\" id=\"Name\" onChange={handleChange} value={temp.Name}></input>\r\n        </div>\r\n        <br/>\r\n        <div className=\"emailContainer\">\r\n            <label className=\"emailLabel\" for=\"Email\">Email</label>\r\n                {Object.keys(error.EmailErr).map((key) => {\r\n                    return (\r\n                    <span className=\"emailErr\">{error.EmailErr[key]}</span>\r\n                    );\r\n                })} \r\n                <br/>\r\n            <input className=\"emailInput\" type=\"email\" name=\"Email\" id=\"Email\" onChange={handleChange} value={temp.Email}></input>\r\n        </div>\r\n        <br/>\r\n        <div className=\"passContainer\">\r\n            <label className=\"passLabel\" for=\"Password\">Password</label>\r\n                {Object.keys(error.PasswordErr).map((key) => {\r\n                    return (\r\n                    <span className=\"passErr\">{error.PasswordErr[key]}</span>\r\n                    );\r\n                })} \r\n                <br/>\r\n            <input className=\"passInput\" type=\"password\" name=\"Password\" id=\"Password\" onChange={handleChange} value={temp.Password}></input>\r\n        </div>\r\n        <br/>\r\n        <div className=\"signupBtnContainer\">\r\n            <button className=\"signupBtn\" onClick={add}>SIGNUP</button>\r\n        </div>\r\n        <Link to=\"/\"><h3 className=\"navLogin\">LOGIN</h3></Link>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Signup;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
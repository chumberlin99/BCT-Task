{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumb\\\\OneDrive\\\\Desktop\\\\BCT-Task\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  debugger; // const [valid,setValid]=useContext(Context);\n\n  const [loginProps, setLoginProps] = useState({\n    Email: \"\",\n    Password: \"\"\n  });\n  const [loginErrors, setLoginErrors] = useState({\n    EmailErr: \"\",\n    PassErr: \"\",\n    invalidEmail: \"\",\n    invalidPass: \"\",\n    propsValid: \"\"\n  });\n\n  const Login = () => {\n    debugger;\n    let propsvalid = propsValidation();\n\n    if (propsvalid === true) {\n      props.history.push(\"/signup\");\n      alert(`Login success alert`);\n    } // else{\n    //     setLoginProps((prev)=>({\n    //         ...prev,\n    //         propsValid:\"Incorrect Email or Password\"\n    //     }))\n    // }\n\n  };\n\n  const propsValidation = () => {\n    debugger;\n    let isvalid = validation();\n\n    if (isvalid === true) {\n      let propsValid = true;\n\n      try {// let emailprops = valid.UserInfo.filter((item)=> item.Email === loginProps.Email)\n        // if(emailprops[0].Email === loginProps.Email){\n        //     propsValid = true;\n        // }else{\n        //     propsValid = false;\n        // }\n        // let passprops = valid.UserInfo.filter((item)=> item.Password === loginProps.Password)\n        // if(passprops[0].Password === loginProps.Password){\n        //     propsValid = true;\n        // }else{\n        //     propsValid = false;\n        // }\n      } catch (error) {\n        propsValid = false;\n        setLoginErrors(prev => ({ ...prev,\n          propsValid: \"Incorrect UserName or Password\"\n        }));\n      } // setLoginErrors((prev)=>({\n      //     ...prev,\n      //     propsValid:\"Incorrect UserName or Password\"\n      // }))\n\n\n      return propsValid;\n    }\n  };\n\n  const validation = () => {\n    debugger;\n    const EmailErr = {};\n    const PassErr = {};\n    const propsValid = {};\n    const invalidEmail = {};\n    const invalidPass = {};\n    let isValid = true;\n\n    try {\n      if (loginProps.Email.length < 1) {\n        EmailErr.emailsort = \"Enter Email\";\n        isValid = false;\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(loginProps.Email)) {\n        EmailErr.EmailSort = \"Enter a valid Email\";\n        isValid = false;\n      }\n\n      if (loginProps.Password.length < 1) {\n        PassErr.passsort = \"Enter Password\";\n        isValid = false;\n      } else if (loginProps.Password.length < 6) {\n        PassErr.PasswordSort = \"Enter a valid Password\";\n        isValid = false;\n      } // if(isValid === false){\n      //     propsValid.propsValidSort=\"Incorrect UserName or Password\";\n      // }\n\n\n      setLoginErrors({\n        EmailErr: EmailErr,\n        PassErr: PassErr // propsValid:propsValid,\n\n      });\n      return isValid;\n    } catch (error) {\n      isValid = false;\n    }\n  };\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setLoginProps(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"vh-100 gradient-custom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4 h-40\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center align-items-center h-40\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-8 col-lg-6 col-xl-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card bg-dark text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-4 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-md-5 mt-md-4 pb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"small mb-1 pb-lg-1 text-warning\",\n                  children: loginErrors.propsValid\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-outline form-white mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    for: \"typeEmailX\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    placeholder: \"Email\",\n                    id: \"typeEmailX\",\n                    name: \"Email\",\n                    className: \"form-control form-control-lg\",\n                    onChange: handleChange,\n                    value: loginProps.Email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 37\n                  }, this), Object.keys(loginErrors.EmailErr).map(key => {\n                    return (\n                      /*#__PURE__*/\n                      // {usernameErr[key]}\n                      _jsxDEV(\"p\", {\n                        className: \"small mb-1 pb-lg-1 text-warning\",\n                        children: loginErrors.EmailErr[key]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 41\n                      }, this)\n                    );\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-outline form-white mb-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    for: \"typePasswordX\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    id: \"typePasswordX\",\n                    name: \"Password\",\n                    className: \"form-control form-control-lg\",\n                    onChange: handleChange,\n                    value: loginProps.Password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 37\n                  }, this), Object.keys(loginErrors.PassErr).map(key => {\n                    return (\n                      /*#__PURE__*/\n                      // {usernameErr[key]}\n                      _jsxDEV(\"p\", {\n                        className: \"small mb-1 pb-lg-1 text-warning\",\n                        children: loginErrors.PassErr[key]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 41\n                      }, this)\n                    );\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-light btn-lg px-5\",\n                  onClick: Login,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"eZgzzSXvEuKFcer2fkasXlHs5tA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/chumb/OneDrive/Desktop/BCT-Task/frontend/src/components/Login.js"],"names":["React","useState","Link","Login","props","loginProps","setLoginProps","Email","Password","loginErrors","setLoginErrors","EmailErr","PassErr","invalidEmail","invalidPass","propsValid","propsvalid","propsValidation","history","push","alert","isvalid","validation","error","prev","isValid","length","emailsort","test","EmailSort","passsort","PasswordSort","handleChange","e","name","value","target","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login(props) {\r\n    debugger;\r\n    // const [valid,setValid]=useContext(Context);\r\n\r\n    const [loginProps, setLoginProps]=useState({\r\n        Email:\"\",\r\n        Password:\"\",\r\n    });\r\n        const [loginErrors, setLoginErrors]=useState({\r\n        EmailErr:\"\",\r\n        PassErr:\"\",\r\n\r\n        invalidEmail:\"\",\r\n        invalidPass:\"\",\r\n        propsValid:\"\",\r\n    })\r\n    \r\n    const Login =() =>{\r\n        debugger;\r\n\r\n        let propsvalid = propsValidation();\r\n\r\n        if(propsvalid === true ){\r\n            props.history.push(\"/signup\")\r\n            alert(`Login success alert`)\r\n        }\r\n\r\n        // else{\r\n        //     setLoginProps((prev)=>({\r\n        //         ...prev,\r\n        //         propsValid:\"Incorrect Email or Password\"\r\n        //     }))\r\n        // }\r\n        \r\n    }\r\n    const propsValidation = () =>{\r\n        debugger;\r\n        let isvalid =validation();\r\n\r\n        if(isvalid === true){\r\n\r\n        let propsValid = true;\r\n\r\n        try {\r\n                // let emailprops = valid.UserInfo.filter((item)=> item.Email === loginProps.Email)\r\n                // if(emailprops[0].Email === loginProps.Email){\r\n                //     propsValid = true;\r\n                // }else{\r\n                //     propsValid = false;\r\n                // }\r\n                // let passprops = valid.UserInfo.filter((item)=> item.Password === loginProps.Password)\r\n                // if(passprops[0].Password === loginProps.Password){\r\n                //     propsValid = true;\r\n                // }else{\r\n                //     propsValid = false;\r\n                // }\r\n        }\r\n        \r\n        catch (error) {\r\n            propsValid = false;\r\n\r\n            setLoginErrors((prev)=>({\r\n                ...prev,\r\n                propsValid:\"Incorrect UserName or Password\"\r\n            }))\r\n        }\r\n            // setLoginErrors((prev)=>({\r\n            //     ...prev,\r\n            //     propsValid:\"Incorrect UserName or Password\"\r\n            // }))\r\n        return propsValid;\r\n        }\r\n        \r\n    }\r\n    const validation =()=>{\r\n        debugger;\r\n        const EmailErr={};\r\n        const PassErr={};\r\n        const propsValid={};\r\n        const invalidEmail={};\r\n        const invalidPass={};\r\n        let isValid= true;\r\n    try{\r\n        if(loginProps.Email.length < 1){\r\n            EmailErr.emailsort=\"Enter Email\";\r\n            isValid =false;\r\n        }\r\n        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(loginProps.Email)){\r\n            EmailErr.EmailSort=\"Enter a valid Email\";\r\n            isValid =false;\r\n        }\r\n        if(loginProps.Password.length < 1){\r\n            PassErr.passsort=\"Enter Password\";\r\n            isValid =false;\r\n        }\r\n        else if(loginProps.Password.length < 6 ){\r\n            PassErr.PasswordSort=\"Enter a valid Password\";\r\n            isValid =false;\r\n        }\r\n        // if(isValid === false){\r\n        //     propsValid.propsValidSort=\"Incorrect UserName or Password\";\r\n        // }\r\n    setLoginErrors({\r\n        EmailErr: EmailErr,\r\n        PassErr: PassErr,\r\n        // propsValid:propsValid,\r\n    })\r\n\r\n        return isValid;\r\n    }\r\n    catch(error){\r\n    isValid =false\r\n    }\r\n    }\r\n\r\n    const handleChange = (e)=>{\r\n        let {name,value}=e.target;\r\n        setLoginProps((prev)=>({\r\n            ...prev,\r\n            [name]:value\r\n        }))\r\n    }\r\n\r\n    return (\r\n    <section className=\"vh-100 gradient-custom\">\r\n        <div className=\"container py-4 h-40\">\r\n            <div className=\"row d-flex justify-content-center align-items-center h-40\">\r\n                <div className=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n                    <div className=\"card bg-dark text-white\" >\r\n                        <div className=\"card-body p-4 text-center\">\r\n\r\n                            <div className=\"mb-md-5 mt-md-4 pb-4\">\r\n\r\n                                {/* <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2> */}\r\n                                {/* <p className=\"text-white-50 mb-5\">Please enter your Email and password!</p> */}\r\n                                    {/* {Object.keys(loginErrors.propsValid).map((key) => {\r\n                                    return (\r\n                                        // {usernameErr[key]}\r\n                                        <p className=\"small mb-1 pb-lg-1 text-warning\">{loginErrors.propsValid[key]}</p>\r\n                                    );\r\n                                    })}  */}\r\n                                <span className=\"small mb-1 pb-lg-1 text-warning\" >{loginErrors.propsValid}</span>\r\n\r\n                                <div className=\"form-outline form-white mb-4\">\r\n                                    <label className=\"form-label\" for=\"typeEmailX\">Email</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" id=\"typeEmailX\" name=\"Email\" className=\"form-control form-control-lg\" onChange={handleChange} value={loginProps.Email} />\r\n                                    {Object.keys(loginErrors.EmailErr).map((key) => {\r\n                                    return (\r\n                                        // {usernameErr[key]}\r\n                                        <p className=\"small mb-1 pb-lg-1 text-warning\">{loginErrors.EmailErr[key]}</p>\r\n                                    );\r\n                                    })} \r\n                                </div>\r\n\r\n                                <div className=\"form-outline form-white mb-5\">\r\n                                    <label className=\"form-label\" for=\"typePasswordX\">Password</label>\r\n                                    <input type=\"password\" placeholder=\"Password\" id=\"typePasswordX\" name=\"Password\" className=\"form-control form-control-lg\" onChange={handleChange} value={loginProps.Password} />\r\n                                    {Object.keys(loginErrors.PassErr).map((key) => {\r\n                                    return (\r\n                                        // {usernameErr[key]}\r\n                                        <p className=\"small mb-1 pb-lg-1 text-warning\">{loginErrors.PassErr[key]}</p>\r\n                                    );\r\n                                    })} \r\n                                </div>\r\n\r\n                                    \r\n\r\n                                <button className=\"btn btn-outline-light btn-lg px-5\" onClick={Login}>Login</button>\r\n\r\n                                {/* <div className=\"d-flex justify-content-center text-center mt-4 pt-1\">\r\n                                    <a href=\"#!\" className=\"text-white\"><i className=\"fab fa-facebook-f fa-lg\"></i></a>\r\n                                    <a href=\"#!\" className=\"text-white\"><i className=\"fab fa-twitter fa-lg mx-4 px-2\"></i></a>\r\n                                    <a href=\"#!\" className=\"text-white\"><i className=\"fab fa-google fa-lg\"></i></a>\r\n                                </div> */}\r\n                            \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* <p>{loginProps.Email}</p> */}\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}